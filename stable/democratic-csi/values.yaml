# Default values for democratic-csi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

driver:
  config: {}
    #driver: 
    # rest of per-driver config data/syntax
    # ...

# https://kubernetes-csi.github.io/docs/csi-driver-object.html
csiDriver:
  # should be globally unique for a given cluster
  name:
  version: 1.1.0
  # create the kubernetes CSIDriver
  enabled: true
  attachRequired: false
  podInfoOnMount: true
  # clusters before 1.14 requeired manual installation
  # kubectl create -f https://raw.githubusercontent.com/kubernetes/csi-api/master/pkg/crd/manifests/csidriver.yaml
  installCRD: false
  # volumeLifecycleModes: []

controller:
  rbac:
    enabled: true
  replicaCount: 1
  enabled: true
  hostNetwork: false
  hostIPC: false
  
  # deployment = deploy controller parts in a distinct deployment
  # node       = deploy controller as sidecars with node daemonset
  strategy: deployment
  
  # https://kubernetes-csi.github.io/docs/external-provisioner.html
  externalProvisioner:
    enabled: true
    image: quay.io/k8scsi/csi-provisioner:v1.6.0

  # https://kubernetes-csi.github.io/docs/external-resizer.html
  externalResizer:
    enabled: true
    image: quay.io/k8scsi/csi-resizer:v0.5.0

  # https://kubernetes-csi.github.io/docs/external-snapshotter.html
  externalSnapshotter:
    enabled: true
    # v1.17+
    #image: quay.io/k8scsi/csi-snapshotter:v2.1.0
    
    # v1.13-v1.16
    #image: quay.io/k8scsi/csi-snapshotter:v1.2.2

  # https://kubernetes-csi.github.io/docs/cluster-driver-registrar.html
  # not implemented, likely uncessary at this point
  clusterDriverRegistrar:
    enabled: false

  livenessProbe:
    enabled: true

  # democratic-csi controller
  driver:
    enabled: true
    image: democraticcsi/democratic-csi:latest
    logLevel: info
    lifecycle:
#      postStart:
#        exec:
#          command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
#      preStop:
#        exec:
#          command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]

    securityContext:
#      allowPrivilegeEscalation: true
#      capabilities:
#        add:
#        - SYS_ADMIN
#      privileged: true

    extraVolumeMounts: []
#    - name: foo
#      mountPath: /foo

  extraVolumes: []
#  - name: foo
#    hostPath:
#      path: /dev
#      type: Directory

node:
  rbac:
    enabled: true
  enabled: true
  hostNetwork: true
  hostIPC: true
  kubeletHostPath: /var/lib/kubelet

  livenessProbe:
    enabled: true

  # democratic-csi node
  driver:
    enabled: true
    image: democraticcsi/democratic-csi:latest
    logLevel: info
    lifecycle:
#      postStart:
#        exec:
#          command: ["/bin/sh", "-c", "echo Hello from the postStart handler > /usr/share/message"]
#      preStop:
#        exec:
#          command: ["/bin/sh","-c","nginx -s quit; while killall -0 nginx; do sleep 1; done"]

    extraVolumeMounts: []
#    - name: foo
#      mountPath: /foo
  
  # https://kubernetes-csi.github.io/docs/node-driver-registrar.html
  driverRegistrar:
    enabled: true
    image: quay.io/k8scsi/csi-node-driver-registrar:v1.2.0
    cleanup:
      image: gcr.io/google_containers/busybox:1.24

  extraVolumes: []
#  - name: foo
#    hostPath:
#      path: /dev
#      type: Directory

# add note here about volume expansion requirements
storageClasses: []
#- name:
#  defaultClass: false
#  reclaimPolicy: Delete
#  volumeBindingMode: Immediate
#  allowVolumeExpansion: true
#  parameters:
#    # for block-based storage can be ext3, ext4, xfs
#    # for nfs should be nfs
#    fsType:
#  mountOptions: []
#  secrets:
#    provisioner-secret:
#    controller-publish-secret:
#    node-stage-secret:
#    node-publish-secret:
#    controller-expand-secret:

volumeSnapshotClasses: []
#- name:
#  deletionPolicy: Delete | Retain
#  parameters:
#  secrets:
#    snapshotter-secret:

